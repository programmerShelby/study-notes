节点操作：
    -利用父子兄节点关系获取元素,逻辑性强但是兼容性稍差
    -基本属性：
        1.nodeType  节点类型
            -元素节点 为1
            -属性节点 为2
            -文本节点 为3
        2.nodeName  节点名称         
        3.nodeValue  节点值
    -父节点：
        -parentNode  得到的是离他最近的父节点，找不到返回null
    -子节点：
        -childNodes  返回包含指定节点的子节点集合（其中包含元素节点和文本节点等）
        -children  是一个只读属性，返回所有的子元素节点
        -firstChild  获取第一个子节点（包含文本节点）
        -firstElementChild  获取第一个子元素节点
        -lastChild  获取最后一个子节点（包含文本节点）
        -lastElementChild  获取最后一个子元素节点
        -在实际开发中的写法：
            -父元素.children[0]  获取第一个子元素节点
            -父元素.children[父元素.children.length - 1]  获取最后一个子元素节点
    -兄弟节点：
        -nextSibling  下一个兄弟节点（包含文本节点）
        -nextElementSibling  下一个兄弟元素节点
        -previousSibling  上一个兄弟节点（包含文本节点）
        -previousElementSibling  上一个兄弟元素节点
    -创建节点和添加节点
        -创建节点：
            -document.createElement('元素');
                -var li = document.createElement('li');
        -添加节点：
            -node.appendChild(child)  将一个节点添加到指定父节点中子节点的末尾
                -ul.appendChild(li);
            -node.insertBefore(child,指定元素) 将一个节点添加到父节点中指定子节点的前面
                -ul.insertBefore(li,ul.children[0]);
        -删除节点：
            -node.removeChild(child)  从父节点中删除一个子节点，返回删除的节点
        -复制节点：
            -node.cloneNode()  返回调用该方法的节点的一个副本
                -如果括号参数为空或者false，为浅拷贝
                -如果括号参数为true，为深拷贝
        -三种创建元素方式的区别
            1.document.write() 创建元素，如果页面文档流加载完毕再调用时会导致页面重绘
            2.innerHTML  创建元素，效率更高（不要使用拼接字符串，采取数组形式拼接），解构稍微复杂
            3.document.createElement()  创建元素，效率稍低，但是解构更清晰